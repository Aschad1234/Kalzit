#{
	Defines a simple animation with a given duration.
	An animation is a media object, so you can play it like this:
		play: animation.
	By default, the animation will not do anything. To change that, you could do something like:
		($setOnProgress of animation): {`your action`}.
	To learn more about controllable media, please look at the "MediaController" function.
}
$animation = ($duration ? Float) fun {
	$progress = 0. $progressRef = reference: $progress.
	$onEnd = void. $onEndRef = reference: $onEnd.
	$onProgress = void. $onProgressRef = reference: $onProgress.
	$ended = false. $endedRef = reference: $ended.
	
	$lastInterrupt = \1. $lastInterruptRef = reference: $lastInterrupt.
	$looper = void. $looperRef = reference: $looper.
	
	$looped = () fun {
		$time = do:getCurrentDate.
		onProgress:progressRef = progress + time - lastInterrupt.
		lastInterruptRef = time.
		!ifElse (progress > duration) {
			pause object.
			endedRef = true.
			onProgress:duration.
			do:onEnd.
		};{}
	}.
	
	$object = [$getDuration;duration];
	[$getProgress;() fun {progress}];
	[$setTime;($time) fun {onProgress: progressRef = time}];
	[$setOnEnd;($callback) fun {onEndRef = callback}];
	[$setOnProgress;($callback) fun {onProgressRef = callback}];
	[$play;() fun {
		`Play the animation`
		!if ended {
			endedRef = false.
			progressRef = 0.
			onProgress:0.
		}.
		!if (looper eq void) {
			lastInterruptRef = do:getCurrentDate.
			looperRef = 32 repeatAsync looped
		}.
	}];
	[$pause;() fun {
		`Pause the animation`
		do:$exit of looper.
		looperRef = void.
	}]
} ? MediaController.