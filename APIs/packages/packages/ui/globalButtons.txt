#{
	A URL that represents the outlined user icon.
	This icon is used to tell the user that he or she is logged out.
	
	You should probably not use this icon on its own, because it has a very reserved meaning.
	Instead, consider using "uiUserButton" or, even better, "uiGlobalToolbar"
}
$userOutlineImageUrl = "/assets/images/static/2020.06.05-user-outline-light.svg".

#{
	A URL that represents the filled user icon.
	This icon is used to tell the user that he or she is logged in.
	
	You should probably not use this icon on its own, because it has a very reserved meaning.
	Instead, consider using "uiUserButton" or, even better, "uiGlobalToolbar"
}
$userImageUrl = "/assets/images/static/2020.06.05-user-light.svg".

#{
	A URL that represents the hamburger icon for mobile devices.
	This icon is used to show a set of applicable tools to the user.
	
	You should probably not use this icon on its own, because it has a very reserved meaning.
	Instead, consider using "uiHamburgerButton" or, even better, "uiGlobalToolbar"
}
$menuImageUrl = "/assets/images/static/2020.06.05-menu-light.svg".

#{
	A URL that represents the app switcher icon.
	This icon is used to show a grid of apps to the user.
	
	You should probably not use this icon on its own, because it has a very reserved meaning.
	Instead, consider using "uiAppsButton" or, even better, "uiGlobalToolbar"
}
$appsImageUrl = "/assets/images/static/2020.06.05-apps-light.svg".

$crossImageUrl = "/assets/images/static/2020.06.05-cross-light.png".

$uiCrossButton = () fun {
	!if isIosApp {@fit closeSubApp uiImageButton crossImageUrl}
} ? UiElement.

`#apps sub app`
do:{
	$appsPopup =  (uiContainer: (uiVerticalPercentSpace 10); @(percentHeight 80) uiHomeScreen: {launchAppName: x}) uiPopup {
		!closeSubApp
	}.
	$apps registerSubApp {
		print: appsPopup.
	};{uiHide: appsPopup}
}.

`#login sub app`
do:{
	$loginPopup = (
		(uiTitleToolbar: "Login");
		(@(percentWidth 90) @(percentHeight 90) @center uiLoginForm: {
			!if x {
				!relaunchApp
			}
		})
	) uiPopup {
		!closeSubApp
	}.
	$login registerSubApp {
		print: loginPopup.
	};{uiHide: loginPopup}.
}.


$uiAccountButton = () fun {@fit (() fun {
	!if (void eq storageLoadString: "calcitSession") {
		openSubApp: $login
	}.
	!else {
		popupMessage: "You are already logged in"
	}
}) uiImageButton userOutlineImageUrl}.

$uiUserConfigButton = () fun {@fit  (() fun {
	!if (void eq storageLoadString: "calcitSession") {
		popupMessage: "You are not logged in"
	}.
	!else {
		popupMessage: "You are already logged in"
	}
}) uiImageButton userImageUrl}.

$uiUserButton = () fun {
	!ifElse (void eq storageLoadString: "calcitSession") {
		do:uiAccountButton
	};{
		do:uiUserConfigButton.
	}
}.

$uiAppsButton = {@fit {
	openSubApp: $apps
} uiImageButton appsImageUrl}.

$uiHamburgerButton = ($action) fun {@fit action uiImageButton menuImageUrl}.