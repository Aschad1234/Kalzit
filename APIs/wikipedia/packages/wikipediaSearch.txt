#{
	Loads data from the Wikipedia search API and returns the resulting string.
	The search API does need a search term (first parameter) and the language of the Wikipedia to search in (second parameter).
	
	The language is usually a two-letter code, as it can be obtained by "!getSimpleUserLanguage".
	
	Usage example:
		$jsonString = "Pineapple" wikipediaSearchJson "en".
		
	If you want to access the found results in a more direct way, consider using "wikipediaSearch" instead of this function.
}
$wikipediaSearchJson = ($term ? String ; $language ? String) fun {
	loadGlobal: "https://" + language + ".wikipedia.org/w/api.php?action=opensearch&search=" + (urlEncodeParameter: term) + "&format=json"
}.

#{
	Performs an easily accessible search for basic Wikipedia data.
	You can specify a search term and an optional language identifier (usually a two letter code, the default is "en") and the function returns a list of result objects.
	
	Every result object has a URL, a title and a (usually empty) description.
	So, to print all results (the title, followed by the URL) you could do this:
		
		{
			print: ($title propOf x) + ": " + ($url propOf x)
		} each wikipediaSearch: "Pineapple".
		
	To specify the language, you could do something like "Search term" wikipediaSearch "de"
}
$wikipediaSearch = ($term ? String ; $language ? ("en" default String)) fun {
	$raw = parseJson: term wikipediaSearchJson language.
	$titles = 1 at raw.
	$descriptions = 2 at raw.
	$urls = 3 at raw.
	$indexes = 0 range (length: titles) - 1.
	{
		[[$title];[x at titles]];
		[[$description];[x at descriptions]];
		[[$url];[x at urls]]
	} each indexes
}.

@(deprecated: "The list of description appears to be always empty and not very useful")
$wikipediaSearchDescriptions = ($term ? String ; $language ? ("en" default String)) fun {
	{$description propOf x} each term wikipediaSearch language.
}.

#{
	Returns a list of URLs for a given search term. The URLs do not need to have something to do with the topic of the term, but they usually include it.
	
	Usage example:
		$urlsWithPineapple = wikipediaSearchUrls: "Pineapple".
		
	As with "wikipediaSearch", you can specify an optional language (usually as a two-letter code):
		"Pineapple" wikipediaSearchUrls "en"
}
$wikipediaSearchUrls = ($term ? String ; $language ? ("en" default String)) fun {
	{$url propOf x} each term wikipediaSearch language.
}.