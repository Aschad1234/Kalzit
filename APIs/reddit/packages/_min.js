GLang.packageManager.registerPrecompiledPackage(["reddit_feed_rss_dom","reddit_feed_entry_doms","reddit_feed_entry_contents","reddit_feed_entry_urls","reddit_content_image_urls","reddit_feed_image_urls","reddit_entry_contents","reddit_entry_image_urls","reddit_entry_urls","reddit_feed_entry_urls_with_images","reddit_entry_title"],[{"kind":"parentheses","parentheses":[{"name":"useInstead","kind":"name"},{"special":":","kind":"special"},{"string":"redditSubData. That function uses the Reddit JSON API and is less likely to break","kind":"string"}]},{"kind":"name","name":"calcitSetAnnotation"},{"string":"redditFeedRssDom","kind":"string"},{"special":"=","kind":"special"},{"kind":"parentheses","parentheses":[{"name":"String","kind":"name"},{"name":"calcitSetType","kind":"name"},{"string":"feed","kind":"string"}]},{"name":"fun","kind":"name"},{"string":"loadDom: \"https://old.reddit.com/r/\" + feed + \"/.rss\"","kind":"string"},{"kind":"dot","dot":1},{"kind":"parentheses","parentheses":[{"name":"useInstead","kind":"name"},{"special":":","kind":"special"},{"string":"redditSubEntries. That function uses the Reddit JSON API and is less likely to break","kind":"string"}]},{"kind":"name","name":"calcitSetAnnotation"},{"string":"redditFeedEntryDoms","kind":"string"},{"special":"=","kind":"special"},{"kind":"parentheses","parentheses":[{"name":"String","kind":"name"},{"name":"calcitSetType","kind":"name"},{"string":"feed","kind":"string"}]},{"name":"fun","kind":"name"},{"string":"\"entry\" domTags redditFeedRssDom: feed","kind":"string"},{"kind":"dot","dot":1},{"string":"redditFeedEntryContents","kind":"string"},{"special":"=","kind":"special"},{"kind":"parentheses","parentheses":[{"name":"String","kind":"name"},{"name":"calcitSetType","kind":"name"},{"string":"feed","kind":"string"}]},{"name":"fun","kind":"name"},{"string":"redditEntryContents: redditFeedRssDom: feed","kind":"string"},{"kind":"dot","dot":1},{"kind":"parentheses","parentheses":[{"name":"useInstead","kind":"name"},{"special":":","kind":"special"},{"string":"redditSubEntryUrls. That function uses the Reddit JSON API and is less likely to break","kind":"string"}]},{"kind":"name","name":"calcitSetAnnotation"},{"string":"redditFeedEntryUrls","kind":"string"},{"special":"=","kind":"special"},{"kind":"parentheses","parentheses":[{"name":"String","kind":"name"},{"name":"calcitSetType","kind":"name"},{"string":"feed","kind":"string"}]},{"name":"fun","kind":"name"},{"kind":"parentheses","parentheses":[{"kind":"parentheses","parentheses":[{"name":"List","kind":"name"},{"special":":","kind":"special"},{"name":"Url","kind":"name"}]},{"name":"calcitSetType","kind":"name"},{"string":";/ redditEntryUrls: redditFeedEntryDoms: feed","kind":"string"}]},{"kind":"dot","dot":1},{"string":"redditContentImageUrls","kind":"string"},{"special":"=","kind":"special"},{"kind":"parentheses","parentheses":[{"name":"String","kind":"name"},{"name":"calcitSetType","kind":"name"},{"string":"content","kind":"string"}]},{"name":"fun","kind":"name"},{"kind":"parentheses","parentheses":[{"name":"Images","kind":"name"},{"name":"calcitSetType","kind":"name"},{"string":"\"https://i\\.redd\\.it/[a-z0-9]+\\.[a-z0-9]+\" match content","kind":"string"}]},{"kind":"dot","dot":1},{"kind":"parentheses","parentheses":[{"name":"useInstead","kind":"name"},{"special":":","kind":"special"},{"string":"redditSubImages. That function uses the Reddit JSON API and is less likely to break","kind":"string"}]},{"kind":"name","name":"calcitSetAnnotation"},{"string":"redditFeedImageUrls","kind":"string"},{"special":"=","kind":"special"},{"kind":"parentheses","parentheses":[{"name":"String","kind":"name"},{"name":"calcitSetType","kind":"name"},{"string":"feed","kind":"string"}]},{"name":"fun","kind":"name"},{"kind":"parentheses","parentheses":[{"name":"Images","kind":"name"},{"name":"calcitSetType","kind":"name"},{"string":";/ redditContentImageUrls each redditFeedEntryContents: feed","kind":"string"}]},{"kind":"dot","dot":1},{"string":"redditEntryContents","kind":"string"},{"special":"=","kind":"special"},{"string":"entry","kind":"string"},{"name":"fun","kind":"name"},{"string":"domInnerText each \"content\" domTags entry","kind":"string"},{"kind":"dot","dot":1},{"string":"redditEntryImageUrls","kind":"string"},{"special":"=","kind":"special"},{"string":"entry","kind":"string"},{"name":"fun","kind":"name"},{"kind":"parentheses","parentheses":[{"name":"Images","kind":"name"},{"name":"calcitSetType","kind":"name"},{"string":";/ redditContentImageUrls each redditEntryContents: entry","kind":"string"}]},{"kind":"dot","dot":1},{"string":"redditEntryUrls","kind":"string"},{"special":"=","kind":"special"},{"string":"entry","kind":"string"},{"name":"fun","kind":"name"},{"string":";/ \"href\" domAttribute \"link\" domTags entry","kind":"string"},{"kind":"dot","dot":1},{"string":"redditFeedEntryUrlsWithImages","kind":"string"},{"special":"=","kind":"special"},{"kind":"parentheses","parentheses":[{"name":"String","kind":"name"},{"name":"calcitSetType","kind":"name"},{"string":"feed","kind":"string"}]},{"name":"fun","kind":"name"},{"string":"{2 eq length: x} filter {(first: redditEntryUrls:x);first: redditEntryImageUrls:x} each redditFeedEntryDoms: feed","kind":"string"},{"kind":"dot","dot":1},{"string":"redditEntryTitle","kind":"string"},{"special":"=","kind":"special"},{"string":"entry","kind":"string"},{"name":"fun","kind":"name"},{"string":"domInnerText each \"title\" domTags entry","kind":"string"}]);GLang.packageManager.registerPrecompiledPackage(["reddit_sub_data","reddit_sub_entries","reddit_sub_entry_urls","reddit_sub_images","kmp_from_reddit_sub_image","kmp_from_reddit_sub_images"],[{"string":"redditSubData","kind":"string"},{"special":"=","kind":"special"},{"string":"subreddit","kind":"string"},{"name":"fun","kind":"name"},{"string":"parseJson: loadGlobal: \"https://reddit.com/r/\" + subreddit + \".json\"","kind":"string"},{"kind":"dot","dot":1},{"string":"redditSubEntries","kind":"string"},{"special":"=","kind":"special"},{"string":"subreddit","kind":"string"},{"name":"fun","kind":"name"},{"string":"\n\t{$data of x} each $children propOf $data propOf redditSubData: subreddit\n","kind":"string"},{"kind":"dot","dot":1},{"string":"redditSubEntryUrls","kind":"string"},{"special":"=","kind":"special"},{"string":"subreddit","kind":"string"},{"name":"fun","kind":"name"},{"string":"{$url of x} each redditSubEntries: subreddit","kind":"string"},{"kind":"dot","dot":1},{"string":"redditSubImages","kind":"string"},{"special":"=","kind":"special"},{"string":"subreddit","kind":"string"},{"name":"fun","kind":"name"},{"string":"\n\t$pics = {\"image\" eq $post_hint propOf x} filter redditSubEntries: subreddit.\n","kind":"string"},{"kind":"dot","dot":1},{"string":"kmpFromRedditSubImage","kind":"string"},{"special":"=","kind":"special"},{"string":"_subImage","kind":"string"},{"name":"fun","kind":"name"},{"string":"\n\t$url = $url propOf _subImage.\n\t\n\t[\"kind\";\"image\"];\n\t[\"link\";url];\n\t[\"file\";[\n\t\t[\"default\";url]\n\t]];\n\t[\"protocolVersion\";\"2.0.0\"];\n\t[\"thumbnail\";[\n\t\t[\"default\";$thumbnail of _subImage]\n\t]]\n","kind":"string"},{"kind":"dot","dot":1},{"string":"kmpFromRedditSubImages","kind":"string"},{"special":"=","kind":"special"},{"string":"_subImages","kind":"string"},{"name":"fun","kind":"name"},{"string":"\n\t[\"kind\";\"collection\"];\n\t[\"protocolVersion\";\"2.0.0\"];\n\t[\"collection\";[\n\t\tkmpFromRedditSubImage each _subImages\n\t]]\n","kind":"string"}])