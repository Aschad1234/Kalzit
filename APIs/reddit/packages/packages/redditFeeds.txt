@(useInstead: "redditSubData. That function uses the Reddit JSON API and is less likely to break")
$redditFeedRssDom = ($feed ? String) fun {loadDom: "https://old.reddit.com/r/" + feed + "/.rss"}.

@(useInstead: "redditSubEntries. That function uses the Reddit JSON API and is less likely to break")
$redditFeedEntryDoms = ($feed ? String) fun {"entry" domTags redditFeedRssDom: feed}.

$redditFeedEntryContents = ($feed ? String) fun {redditEntryContents: redditFeedRssDom: feed}.

@(useInstead: "redditSubEntryUrls. That function uses the Reddit JSON API and is less likely to break")
$redditFeedEntryUrls = ($feed ? String) fun {;/ redditEntryUrls: redditFeedEntryDoms: feed} ? (List:Url).

$redditContentImageUrls = ($content ? String) fun {"https://i\.redd\.it/[a-z0-9]+\.[a-z0-9]+" match content} ? Images.

@(useInstead: "redditSubImages. That function uses the Reddit JSON API and is less likely to break")
$redditFeedImageUrls = ($feed ? String) fun {;/ redditContentImageUrls each redditFeedEntryContents: feed} ? Images.

$redditEntryContents = ($entry) fun {domInnerText each "content" domTags entry}.

$redditEntryImageUrls = ($entry) fun {;/ redditContentImageUrls each redditEntryContents: entry} ? Images.

$redditEntryUrls = ($entry) fun {;/ "href" domAttribute "link" domTags entry}.

$redditFeedEntryUrlsWithImages = ($feed ? String) fun {{2 eq length: x} filter {(first: redditEntryUrls:x);first: redditEntryImageUrls:x} each redditFeedEntryDoms: feed}.

$redditEntryTitle = ($entry) fun {domInnerText each "title" domTags entry}.