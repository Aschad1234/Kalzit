$jsonFile = appParameter: "input-file".

!if (fileIsFile: jsonFile) {
	$jsonParent = fileParent: jsonFile.

	$packageObject = parseJson: fileContent: jsonFile.
	$libraries = $libraries propOf packageObject.
	(appParameter: "output-file") fileWrite ";" strJoin {
		$jsonEntry = x.
		$scriptPath = jsonParent + "/packages/" + $scriptUrl propOf jsonEntry.
		do: !switchFirst (scriptPath)
			[{(".k" strEndsWith x) | ".txt" strEndsWith x};{
				"GLang.packageManager.registerPrecompiledPackage([" + ("," strJoin {"} + ($provides propOf jsonEntry) + {"}) + "]," +
					((fileContent: scriptPath) calcitCompile true `optimized`) +
				")"
			}];
			[{".js" strEndsWith x};{
				"GLang.packageManager.installJs(function(){" + (fileContent: scriptPath) + "})"
			}].
	} each libraries.
	
	(appParameter: "output-file") fileWrite (runCommand: 'terser "' + (appParameter: "output-file") + '"')
}. !else {
	print: "The json file you specified is not a file! (--input-file):".
	print: jsonFile.
}